{"name":"Consolejs","tagline":"Javascript remote console logging","body":"# NOTE \r\nCheck Concole.IO at http://nkashyap.github.io/console.io/ for new and enhanced features. \r\n\r\n# ConsoleJS\r\n\r\nConsoleJS is a Node.JS project. Its provide Remote Web Console for websites, Javascript, Smart Tv, mobile phones apps.\r\nIt uses socket.io to provide real time response from the browsers.\r\n\r\nIts works pretty much on all modern browsers, mobile devices, Smart TVs, etc\r\n\r\n## Install Socket.io\r\n\r\n```bash\r\nnpm install socket.io\r\n```\r\n\r\n## Start server\r\n\r\n```bash\r\nnode Server\\Start.js\r\n```\r\n\r\n## Include following scripts in your website or javascript application\r\n\r\nBasic ConsoleJS support for cross-browsers\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/ConsoleJS.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Browser.js\"></script>\r\n```\r\n\r\nConsoleJS with sockets for remote logging\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/socket.io/socket.io.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Socket.js\"></script>\r\n```\r\n\r\nConsoleJS with web logging\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Web.js\"></script>\r\n...\r\n<link rel=\"stylesheet\" href=\"http://NodeServerURL:Port/Client/Web.css\" type=\"text/css\">\r\n<link rel=\"stylesheet\" href=\"http://NodeServerURL:Port/Shared/console.css\" type=\"text/css\">\r\n```\r\n\r\nInclude files in following order \r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/socket.io/socket.io.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/ConsoleJS.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Browser.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Socket.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://NodeServerURL:Port/Client/Web.js\"></script>\r\n...\r\n<link rel=\"stylesheet\" href=\"http://NodeServerURL:Port/Client/Web.css\" type=\"text/css\">\r\n<link rel=\"stylesheet\" href=\"http://NodeServerURL:Port/Shared/console.css\" type=\"text/css\">\r\n```\r\n\r\nThen goto following url to access web console http://NodeServerURL:Port/\r\n\r\n![Screen shot](https://raw.github.com/nkashyap/ConsoleJS/master/consoleJS.PNG)\r\n\r\n#ConsoleJS Editor\r\n\r\nYou can execute commands on remote client from ConsoleJS. You can execute single & multilines javascript code.\r\n\r\nShortcuts: Ctrl+Enter to execute command and Ctrl+Space for autocomplate\r\n\r\nNote: All multilines code should be wrapped within self executable function. E.G\r\n```html\r\n(function doSomeThing(){\r\n .......\r\n}())\r\n```\r\n\r\n#Console API methods supported\r\n * console.assert(x)\r\n * console.count(key)\r\n * console.time(name, reset)\r\n * console.timeEnd(name)\r\n * console.debug(arguments...)\r\n * console.warn(arguments...)\r\n * console.info(arguments...)\r\n * console.log(arguments...)\r\n * console.dir(object)\r\n * console.dirxml(HTML Element)\r\n * console.error(error)\r\n * console.exception(error)\r\n * console.trace()\r\n\r\n#Coming soon...\r\n * console.group()\r\n * console.groupCollapsed()\r\n * console.groupEnd()\r\n * console.markTimeline()\r\n * console.timestamp()\r\n * console.profiles\r\n * console.profile()\r\n * console.profileEnd()\r\n\r\n#TODO\r\n * Change it into npm module\r\n * Move browser detect into server\r\n * refactor code to use express.io\r\n * Load addons dynamically (e.g web, socket, etc)\r\n * Update Readme with full feature list\r\n\r\n#Copyright and license\r\n MIT-LICENSE\r\n\r\n#Reference\r\n [Javascript Stacktrace] (https://github.com/eriwen/javascript-stacktrace)\r\n\r\n [Socket.io] (http://socket.io/#how-to-use)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}